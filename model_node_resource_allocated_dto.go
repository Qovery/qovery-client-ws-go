/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NodeResourceAllocatedDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeResourceAllocatedDto{}

// NodeResourceAllocatedDto struct for NodeResourceAllocatedDto
type NodeResourceAllocatedDto struct {
	CpuMilli int32 `json:"cpu_milli"`
	MemoryMib int32 `json:"memory_mib"`
}

type _NodeResourceAllocatedDto NodeResourceAllocatedDto

// NewNodeResourceAllocatedDto instantiates a new NodeResourceAllocatedDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeResourceAllocatedDto(cpuMilli int32, memoryMib int32) *NodeResourceAllocatedDto {
	this := NodeResourceAllocatedDto{}
	this.CpuMilli = cpuMilli
	this.MemoryMib = memoryMib
	return &this
}

// NewNodeResourceAllocatedDtoWithDefaults instantiates a new NodeResourceAllocatedDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeResourceAllocatedDtoWithDefaults() *NodeResourceAllocatedDto {
	this := NodeResourceAllocatedDto{}
	return &this
}

// GetCpuMilli returns the CpuMilli field value
func (o *NodeResourceAllocatedDto) GetCpuMilli() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CpuMilli
}

// GetCpuMilliOk returns a tuple with the CpuMilli field value
// and a boolean to check if the value has been set.
func (o *NodeResourceAllocatedDto) GetCpuMilliOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuMilli, true
}

// SetCpuMilli sets field value
func (o *NodeResourceAllocatedDto) SetCpuMilli(v int32) {
	o.CpuMilli = v
}

// GetMemoryMib returns the MemoryMib field value
func (o *NodeResourceAllocatedDto) GetMemoryMib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemoryMib
}

// GetMemoryMibOk returns a tuple with the MemoryMib field value
// and a boolean to check if the value has been set.
func (o *NodeResourceAllocatedDto) GetMemoryMibOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryMib, true
}

// SetMemoryMib sets field value
func (o *NodeResourceAllocatedDto) SetMemoryMib(v int32) {
	o.MemoryMib = v
}

func (o NodeResourceAllocatedDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeResourceAllocatedDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu_milli"] = o.CpuMilli
	toSerialize["memory_mib"] = o.MemoryMib
	return toSerialize, nil
}

func (o *NodeResourceAllocatedDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cpu_milli",
		"memory_mib",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodeResourceAllocatedDto := _NodeResourceAllocatedDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNodeResourceAllocatedDto)

	if err != nil {
		return err
	}

	*o = NodeResourceAllocatedDto(varNodeResourceAllocatedDto)

	return err
}

type NullableNodeResourceAllocatedDto struct {
	value *NodeResourceAllocatedDto
	isSet bool
}

func (v NullableNodeResourceAllocatedDto) Get() *NodeResourceAllocatedDto {
	return v.value
}

func (v *NullableNodeResourceAllocatedDto) Set(val *NodeResourceAllocatedDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeResourceAllocatedDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeResourceAllocatedDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeResourceAllocatedDto(val *NodeResourceAllocatedDto) *NullableNodeResourceAllocatedDto {
	return &NullableNodeResourceAllocatedDto{value: val, isSet: true}
}

func (v NullableNodeResourceAllocatedDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeResourceAllocatedDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


