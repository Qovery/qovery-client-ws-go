/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NodeResourceAllocatedDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeResourceAllocatedDto{}

// NodeResourceAllocatedDto struct for NodeResourceAllocatedDto
type NodeResourceAllocatedDto struct {
	LimitCpuMilli int32 `json:"limit_cpu_milli"`
	LimitMemoryMib int32 `json:"limit_memory_mib"`
	RequestCpuMilli int32 `json:"request_cpu_milli"`
	RequestMemoryMib int32 `json:"request_memory_mib"`
}

type _NodeResourceAllocatedDto NodeResourceAllocatedDto

// NewNodeResourceAllocatedDto instantiates a new NodeResourceAllocatedDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeResourceAllocatedDto(limitCpuMilli int32, limitMemoryMib int32, requestCpuMilli int32, requestMemoryMib int32) *NodeResourceAllocatedDto {
	this := NodeResourceAllocatedDto{}
	this.LimitCpuMilli = limitCpuMilli
	this.LimitMemoryMib = limitMemoryMib
	this.RequestCpuMilli = requestCpuMilli
	this.RequestMemoryMib = requestMemoryMib
	return &this
}

// NewNodeResourceAllocatedDtoWithDefaults instantiates a new NodeResourceAllocatedDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeResourceAllocatedDtoWithDefaults() *NodeResourceAllocatedDto {
	this := NodeResourceAllocatedDto{}
	return &this
}

// GetLimitCpuMilli returns the LimitCpuMilli field value
func (o *NodeResourceAllocatedDto) GetLimitCpuMilli() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LimitCpuMilli
}

// GetLimitCpuMilliOk returns a tuple with the LimitCpuMilli field value
// and a boolean to check if the value has been set.
func (o *NodeResourceAllocatedDto) GetLimitCpuMilliOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LimitCpuMilli, true
}

// SetLimitCpuMilli sets field value
func (o *NodeResourceAllocatedDto) SetLimitCpuMilli(v int32) {
	o.LimitCpuMilli = v
}

// GetLimitMemoryMib returns the LimitMemoryMib field value
func (o *NodeResourceAllocatedDto) GetLimitMemoryMib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LimitMemoryMib
}

// GetLimitMemoryMibOk returns a tuple with the LimitMemoryMib field value
// and a boolean to check if the value has been set.
func (o *NodeResourceAllocatedDto) GetLimitMemoryMibOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LimitMemoryMib, true
}

// SetLimitMemoryMib sets field value
func (o *NodeResourceAllocatedDto) SetLimitMemoryMib(v int32) {
	o.LimitMemoryMib = v
}

// GetRequestCpuMilli returns the RequestCpuMilli field value
func (o *NodeResourceAllocatedDto) GetRequestCpuMilli() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestCpuMilli
}

// GetRequestCpuMilliOk returns a tuple with the RequestCpuMilli field value
// and a boolean to check if the value has been set.
func (o *NodeResourceAllocatedDto) GetRequestCpuMilliOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestCpuMilli, true
}

// SetRequestCpuMilli sets field value
func (o *NodeResourceAllocatedDto) SetRequestCpuMilli(v int32) {
	o.RequestCpuMilli = v
}

// GetRequestMemoryMib returns the RequestMemoryMib field value
func (o *NodeResourceAllocatedDto) GetRequestMemoryMib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestMemoryMib
}

// GetRequestMemoryMibOk returns a tuple with the RequestMemoryMib field value
// and a boolean to check if the value has been set.
func (o *NodeResourceAllocatedDto) GetRequestMemoryMibOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestMemoryMib, true
}

// SetRequestMemoryMib sets field value
func (o *NodeResourceAllocatedDto) SetRequestMemoryMib(v int32) {
	o.RequestMemoryMib = v
}

func (o NodeResourceAllocatedDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeResourceAllocatedDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["limit_cpu_milli"] = o.LimitCpuMilli
	toSerialize["limit_memory_mib"] = o.LimitMemoryMib
	toSerialize["request_cpu_milli"] = o.RequestCpuMilli
	toSerialize["request_memory_mib"] = o.RequestMemoryMib
	return toSerialize, nil
}

func (o *NodeResourceAllocatedDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"limit_cpu_milli",
		"limit_memory_mib",
		"request_cpu_milli",
		"request_memory_mib",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodeResourceAllocatedDto := _NodeResourceAllocatedDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNodeResourceAllocatedDto)

	if err != nil {
		return err
	}

	*o = NodeResourceAllocatedDto(varNodeResourceAllocatedDto)

	return err
}

type NullableNodeResourceAllocatedDto struct {
	value *NodeResourceAllocatedDto
	isSet bool
}

func (v NullableNodeResourceAllocatedDto) Get() *NodeResourceAllocatedDto {
	return v.value
}

func (v *NullableNodeResourceAllocatedDto) Set(val *NodeResourceAllocatedDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeResourceAllocatedDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeResourceAllocatedDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeResourceAllocatedDto(val *NodeResourceAllocatedDto) *NullableNodeResourceAllocatedDto {
	return &NullableNodeResourceAllocatedDto{value: val, isSet: true}
}

func (v NullableNodeResourceAllocatedDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeResourceAllocatedDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


