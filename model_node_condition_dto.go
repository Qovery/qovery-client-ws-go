/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
)

// checks if the NodeConditionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeConditionDto{}

// NodeConditionDto struct for NodeConditionDto
type NodeConditionDto struct {
	// Unix timestamp with millisecond precision
	LastHeartbeatTime NullableInt32 `json:"last_heartbeat_time,omitempty"`
	// Unix timestamp with millisecond precision
	LastTransitionTime NullableInt32 `json:"last_transition_time,omitempty"`
	Message string `json:"message"`
	Reason string `json:"reason"`
	Status string `json:"status"`
	Type string `json:"type"`
}

// NewNodeConditionDto instantiates a new NodeConditionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeConditionDto(message string, reason string, status string, type_ string) *NodeConditionDto {
	this := NodeConditionDto{}
	this.Message = message
	this.Reason = reason
	this.Status = status
	this.Type = type_
	return &this
}

// NewNodeConditionDtoWithDefaults instantiates a new NodeConditionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeConditionDtoWithDefaults() *NodeConditionDto {
	this := NodeConditionDto{}
	return &this
}

// GetLastHeartbeatTime returns the LastHeartbeatTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeConditionDto) GetLastHeartbeatTime() int32 {
	if o == nil || IsNil(o.LastHeartbeatTime.Get()) {
		var ret int32
		return ret
	}
	return *o.LastHeartbeatTime.Get()
}

// GetLastHeartbeatTimeOk returns a tuple with the LastHeartbeatTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeConditionDto) GetLastHeartbeatTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastHeartbeatTime.Get(), o.LastHeartbeatTime.IsSet()
}

// HasLastHeartbeatTime returns a boolean if a field has been set.
func (o *NodeConditionDto) HasLastHeartbeatTime() bool {
	if o != nil && o.LastHeartbeatTime.IsSet() {
		return true
	}

	return false
}

// SetLastHeartbeatTime gets a reference to the given NullableInt32 and assigns it to the LastHeartbeatTime field.
func (o *NodeConditionDto) SetLastHeartbeatTime(v int32) {
	o.LastHeartbeatTime.Set(&v)
}
// SetLastHeartbeatTimeNil sets the value for LastHeartbeatTime to be an explicit nil
func (o *NodeConditionDto) SetLastHeartbeatTimeNil() {
	o.LastHeartbeatTime.Set(nil)
}

// UnsetLastHeartbeatTime ensures that no value is present for LastHeartbeatTime, not even an explicit nil
func (o *NodeConditionDto) UnsetLastHeartbeatTime() {
	o.LastHeartbeatTime.Unset()
}

// GetLastTransitionTime returns the LastTransitionTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeConditionDto) GetLastTransitionTime() int32 {
	if o == nil || IsNil(o.LastTransitionTime.Get()) {
		var ret int32
		return ret
	}
	return *o.LastTransitionTime.Get()
}

// GetLastTransitionTimeOk returns a tuple with the LastTransitionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeConditionDto) GetLastTransitionTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTransitionTime.Get(), o.LastTransitionTime.IsSet()
}

// HasLastTransitionTime returns a boolean if a field has been set.
func (o *NodeConditionDto) HasLastTransitionTime() bool {
	if o != nil && o.LastTransitionTime.IsSet() {
		return true
	}

	return false
}

// SetLastTransitionTime gets a reference to the given NullableInt32 and assigns it to the LastTransitionTime field.
func (o *NodeConditionDto) SetLastTransitionTime(v int32) {
	o.LastTransitionTime.Set(&v)
}
// SetLastTransitionTimeNil sets the value for LastTransitionTime to be an explicit nil
func (o *NodeConditionDto) SetLastTransitionTimeNil() {
	o.LastTransitionTime.Set(nil)
}

// UnsetLastTransitionTime ensures that no value is present for LastTransitionTime, not even an explicit nil
func (o *NodeConditionDto) UnsetLastTransitionTime() {
	o.LastTransitionTime.Unset()
}

// GetMessage returns the Message field value
func (o *NodeConditionDto) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *NodeConditionDto) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *NodeConditionDto) SetMessage(v string) {
	o.Message = v
}

// GetReason returns the Reason field value
func (o *NodeConditionDto) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *NodeConditionDto) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *NodeConditionDto) SetReason(v string) {
	o.Reason = v
}

// GetStatus returns the Status field value
func (o *NodeConditionDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *NodeConditionDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *NodeConditionDto) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *NodeConditionDto) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NodeConditionDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NodeConditionDto) SetType(v string) {
	o.Type = v
}

func (o NodeConditionDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeConditionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LastHeartbeatTime.IsSet() {
		toSerialize["last_heartbeat_time"] = o.LastHeartbeatTime.Get()
	}
	if o.LastTransitionTime.IsSet() {
		toSerialize["last_transition_time"] = o.LastTransitionTime.Get()
	}
	toSerialize["message"] = o.Message
	toSerialize["reason"] = o.Reason
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableNodeConditionDto struct {
	value *NodeConditionDto
	isSet bool
}

func (v NullableNodeConditionDto) Get() *NodeConditionDto {
	return v.value
}

func (v *NullableNodeConditionDto) Set(val *NodeConditionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeConditionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeConditionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeConditionDto(val *NodeConditionDto) *NullableNodeConditionDto {
	return &NullableNodeConditionDto{value: val, isSet: true}
}

func (v NullableNodeConditionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeConditionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


