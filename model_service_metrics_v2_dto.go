/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceMetricsV2Dto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceMetricsV2Dto{}

// ServiceMetricsV2Dto struct for ServiceMetricsV2Dto
type ServiceMetricsV2Dto struct {
	Pods []PodInfoDto `json:"pods"`
	Pvcs []PvcInfoDto `json:"pvcs"`
}

type _ServiceMetricsV2Dto ServiceMetricsV2Dto

// NewServiceMetricsV2Dto instantiates a new ServiceMetricsV2Dto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceMetricsV2Dto(pods []PodInfoDto, pvcs []PvcInfoDto) *ServiceMetricsV2Dto {
	this := ServiceMetricsV2Dto{}
	this.Pods = pods
	this.Pvcs = pvcs
	return &this
}

// NewServiceMetricsV2DtoWithDefaults instantiates a new ServiceMetricsV2Dto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceMetricsV2DtoWithDefaults() *ServiceMetricsV2Dto {
	this := ServiceMetricsV2Dto{}
	return &this
}

// GetPods returns the Pods field value
func (o *ServiceMetricsV2Dto) GetPods() []PodInfoDto {
	if o == nil {
		var ret []PodInfoDto
		return ret
	}

	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value
// and a boolean to check if the value has been set.
func (o *ServiceMetricsV2Dto) GetPodsOk() ([]PodInfoDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pods, true
}

// SetPods sets field value
func (o *ServiceMetricsV2Dto) SetPods(v []PodInfoDto) {
	o.Pods = v
}

// GetPvcs returns the Pvcs field value
func (o *ServiceMetricsV2Dto) GetPvcs() []PvcInfoDto {
	if o == nil {
		var ret []PvcInfoDto
		return ret
	}

	return o.Pvcs
}

// GetPvcsOk returns a tuple with the Pvcs field value
// and a boolean to check if the value has been set.
func (o *ServiceMetricsV2Dto) GetPvcsOk() ([]PvcInfoDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pvcs, true
}

// SetPvcs sets field value
func (o *ServiceMetricsV2Dto) SetPvcs(v []PvcInfoDto) {
	o.Pvcs = v
}

func (o ServiceMetricsV2Dto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceMetricsV2Dto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pods"] = o.Pods
	toSerialize["pvcs"] = o.Pvcs
	return toSerialize, nil
}

func (o *ServiceMetricsV2Dto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pods",
		"pvcs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceMetricsV2Dto := _ServiceMetricsV2Dto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceMetricsV2Dto)

	if err != nil {
		return err
	}

	*o = ServiceMetricsV2Dto(varServiceMetricsV2Dto)

	return err
}

type NullableServiceMetricsV2Dto struct {
	value *ServiceMetricsV2Dto
	isSet bool
}

func (v NullableServiceMetricsV2Dto) Get() *ServiceMetricsV2Dto {
	return v.value
}

func (v *NullableServiceMetricsV2Dto) Set(val *ServiceMetricsV2Dto) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceMetricsV2Dto) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceMetricsV2Dto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceMetricsV2Dto(val *ServiceMetricsV2Dto) *NullableServiceMetricsV2Dto {
	return &NullableServiceMetricsV2Dto{value: val, isSet: true}
}

func (v NullableServiceMetricsV2Dto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceMetricsV2Dto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


