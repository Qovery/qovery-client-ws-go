/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NodePodInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodePodInfoDto{}

// NodePodInfoDto struct for NodePodInfoDto
type NodePodInfoDto struct {
	CpuMilliLimit NullableInt32 `json:"cpu_milli_limit,omitempty"`
	CpuMilliRequest NullableInt32 `json:"cpu_milli_request,omitempty"`
	CreatedAt int64 `json:"created_at"`
	EphemeralStorageMibLimit NullableInt32 `json:"ephemeral_storage_mib_limit,omitempty"`
	EphemeralStorageMibRequest NullableInt32 `json:"ephemeral_storage_mib_request,omitempty"`
	ErrorContainerStatuses []NodePodErrorStatusDto `json:"error_container_statuses"`
	ImagesVersion map[string]string `json:"images_version"`
	MemoryMibLimit NullableInt32 `json:"memory_mib_limit,omitempty"`
	MemoryMibRequest NullableInt32 `json:"memory_mib_request,omitempty"`
	MetricsUsage MetricsUsageDto `json:"metrics_usage"`
	Name string `json:"name"`
	Namespace string `json:"namespace"`
	QoveryServiceInfo NullablePodQoveryServiceInfoDto `json:"qovery_service_info,omitempty"`
	RestartCount int32 `json:"restart_count"`
	StatusPhase PodStatusPhase `json:"status_phase"`
}

type _NodePodInfoDto NodePodInfoDto

// NewNodePodInfoDto instantiates a new NodePodInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodePodInfoDto(createdAt int64, errorContainerStatuses []NodePodErrorStatusDto, imagesVersion map[string]string, metricsUsage MetricsUsageDto, name string, namespace string, restartCount int32, statusPhase PodStatusPhase) *NodePodInfoDto {
	this := NodePodInfoDto{}
	this.CreatedAt = createdAt
	this.ErrorContainerStatuses = errorContainerStatuses
	this.ImagesVersion = imagesVersion
	this.MetricsUsage = metricsUsage
	this.Name = name
	this.Namespace = namespace
	this.RestartCount = restartCount
	this.StatusPhase = statusPhase
	return &this
}

// NewNodePodInfoDtoWithDefaults instantiates a new NodePodInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodePodInfoDtoWithDefaults() *NodePodInfoDto {
	this := NodePodInfoDto{}
	return &this
}

// GetCpuMilliLimit returns the CpuMilliLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetCpuMilliLimit() int32 {
	if o == nil || IsNil(o.CpuMilliLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.CpuMilliLimit.Get()
}

// GetCpuMilliLimitOk returns a tuple with the CpuMilliLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetCpuMilliLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuMilliLimit.Get(), o.CpuMilliLimit.IsSet()
}

// HasCpuMilliLimit returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasCpuMilliLimit() bool {
	if o != nil && o.CpuMilliLimit.IsSet() {
		return true
	}

	return false
}

// SetCpuMilliLimit gets a reference to the given NullableInt32 and assigns it to the CpuMilliLimit field.
func (o *NodePodInfoDto) SetCpuMilliLimit(v int32) {
	o.CpuMilliLimit.Set(&v)
}
// SetCpuMilliLimitNil sets the value for CpuMilliLimit to be an explicit nil
func (o *NodePodInfoDto) SetCpuMilliLimitNil() {
	o.CpuMilliLimit.Set(nil)
}

// UnsetCpuMilliLimit ensures that no value is present for CpuMilliLimit, not even an explicit nil
func (o *NodePodInfoDto) UnsetCpuMilliLimit() {
	o.CpuMilliLimit.Unset()
}

// GetCpuMilliRequest returns the CpuMilliRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetCpuMilliRequest() int32 {
	if o == nil || IsNil(o.CpuMilliRequest.Get()) {
		var ret int32
		return ret
	}
	return *o.CpuMilliRequest.Get()
}

// GetCpuMilliRequestOk returns a tuple with the CpuMilliRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetCpuMilliRequestOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuMilliRequest.Get(), o.CpuMilliRequest.IsSet()
}

// HasCpuMilliRequest returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasCpuMilliRequest() bool {
	if o != nil && o.CpuMilliRequest.IsSet() {
		return true
	}

	return false
}

// SetCpuMilliRequest gets a reference to the given NullableInt32 and assigns it to the CpuMilliRequest field.
func (o *NodePodInfoDto) SetCpuMilliRequest(v int32) {
	o.CpuMilliRequest.Set(&v)
}
// SetCpuMilliRequestNil sets the value for CpuMilliRequest to be an explicit nil
func (o *NodePodInfoDto) SetCpuMilliRequestNil() {
	o.CpuMilliRequest.Set(nil)
}

// UnsetCpuMilliRequest ensures that no value is present for CpuMilliRequest, not even an explicit nil
func (o *NodePodInfoDto) UnsetCpuMilliRequest() {
	o.CpuMilliRequest.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *NodePodInfoDto) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *NodePodInfoDto) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetEphemeralStorageMibLimit returns the EphemeralStorageMibLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetEphemeralStorageMibLimit() int32 {
	if o == nil || IsNil(o.EphemeralStorageMibLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.EphemeralStorageMibLimit.Get()
}

// GetEphemeralStorageMibLimitOk returns a tuple with the EphemeralStorageMibLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetEphemeralStorageMibLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EphemeralStorageMibLimit.Get(), o.EphemeralStorageMibLimit.IsSet()
}

// HasEphemeralStorageMibLimit returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasEphemeralStorageMibLimit() bool {
	if o != nil && o.EphemeralStorageMibLimit.IsSet() {
		return true
	}

	return false
}

// SetEphemeralStorageMibLimit gets a reference to the given NullableInt32 and assigns it to the EphemeralStorageMibLimit field.
func (o *NodePodInfoDto) SetEphemeralStorageMibLimit(v int32) {
	o.EphemeralStorageMibLimit.Set(&v)
}
// SetEphemeralStorageMibLimitNil sets the value for EphemeralStorageMibLimit to be an explicit nil
func (o *NodePodInfoDto) SetEphemeralStorageMibLimitNil() {
	o.EphemeralStorageMibLimit.Set(nil)
}

// UnsetEphemeralStorageMibLimit ensures that no value is present for EphemeralStorageMibLimit, not even an explicit nil
func (o *NodePodInfoDto) UnsetEphemeralStorageMibLimit() {
	o.EphemeralStorageMibLimit.Unset()
}

// GetEphemeralStorageMibRequest returns the EphemeralStorageMibRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetEphemeralStorageMibRequest() int32 {
	if o == nil || IsNil(o.EphemeralStorageMibRequest.Get()) {
		var ret int32
		return ret
	}
	return *o.EphemeralStorageMibRequest.Get()
}

// GetEphemeralStorageMibRequestOk returns a tuple with the EphemeralStorageMibRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetEphemeralStorageMibRequestOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EphemeralStorageMibRequest.Get(), o.EphemeralStorageMibRequest.IsSet()
}

// HasEphemeralStorageMibRequest returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasEphemeralStorageMibRequest() bool {
	if o != nil && o.EphemeralStorageMibRequest.IsSet() {
		return true
	}

	return false
}

// SetEphemeralStorageMibRequest gets a reference to the given NullableInt32 and assigns it to the EphemeralStorageMibRequest field.
func (o *NodePodInfoDto) SetEphemeralStorageMibRequest(v int32) {
	o.EphemeralStorageMibRequest.Set(&v)
}
// SetEphemeralStorageMibRequestNil sets the value for EphemeralStorageMibRequest to be an explicit nil
func (o *NodePodInfoDto) SetEphemeralStorageMibRequestNil() {
	o.EphemeralStorageMibRequest.Set(nil)
}

// UnsetEphemeralStorageMibRequest ensures that no value is present for EphemeralStorageMibRequest, not even an explicit nil
func (o *NodePodInfoDto) UnsetEphemeralStorageMibRequest() {
	o.EphemeralStorageMibRequest.Unset()
}

// GetErrorContainerStatuses returns the ErrorContainerStatuses field value
func (o *NodePodInfoDto) GetErrorContainerStatuses() []NodePodErrorStatusDto {
	if o == nil {
		var ret []NodePodErrorStatusDto
		return ret
	}

	return o.ErrorContainerStatuses
}

// GetErrorContainerStatusesOk returns a tuple with the ErrorContainerStatuses field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetErrorContainerStatusesOk() ([]NodePodErrorStatusDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorContainerStatuses, true
}

// SetErrorContainerStatuses sets field value
func (o *NodePodInfoDto) SetErrorContainerStatuses(v []NodePodErrorStatusDto) {
	o.ErrorContainerStatuses = v
}

// GetImagesVersion returns the ImagesVersion field value
func (o *NodePodInfoDto) GetImagesVersion() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.ImagesVersion
}

// GetImagesVersionOk returns a tuple with the ImagesVersion field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetImagesVersionOk() (map[string]string, bool) {
	if o == nil {
		return map[string]string{}, false
	}
	return o.ImagesVersion, true
}

// SetImagesVersion sets field value
func (o *NodePodInfoDto) SetImagesVersion(v map[string]string) {
	o.ImagesVersion = v
}

// GetMemoryMibLimit returns the MemoryMibLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetMemoryMibLimit() int32 {
	if o == nil || IsNil(o.MemoryMibLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryMibLimit.Get()
}

// GetMemoryMibLimitOk returns a tuple with the MemoryMibLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetMemoryMibLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryMibLimit.Get(), o.MemoryMibLimit.IsSet()
}

// HasMemoryMibLimit returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasMemoryMibLimit() bool {
	if o != nil && o.MemoryMibLimit.IsSet() {
		return true
	}

	return false
}

// SetMemoryMibLimit gets a reference to the given NullableInt32 and assigns it to the MemoryMibLimit field.
func (o *NodePodInfoDto) SetMemoryMibLimit(v int32) {
	o.MemoryMibLimit.Set(&v)
}
// SetMemoryMibLimitNil sets the value for MemoryMibLimit to be an explicit nil
func (o *NodePodInfoDto) SetMemoryMibLimitNil() {
	o.MemoryMibLimit.Set(nil)
}

// UnsetMemoryMibLimit ensures that no value is present for MemoryMibLimit, not even an explicit nil
func (o *NodePodInfoDto) UnsetMemoryMibLimit() {
	o.MemoryMibLimit.Unset()
}

// GetMemoryMibRequest returns the MemoryMibRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetMemoryMibRequest() int32 {
	if o == nil || IsNil(o.MemoryMibRequest.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryMibRequest.Get()
}

// GetMemoryMibRequestOk returns a tuple with the MemoryMibRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetMemoryMibRequestOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryMibRequest.Get(), o.MemoryMibRequest.IsSet()
}

// HasMemoryMibRequest returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasMemoryMibRequest() bool {
	if o != nil && o.MemoryMibRequest.IsSet() {
		return true
	}

	return false
}

// SetMemoryMibRequest gets a reference to the given NullableInt32 and assigns it to the MemoryMibRequest field.
func (o *NodePodInfoDto) SetMemoryMibRequest(v int32) {
	o.MemoryMibRequest.Set(&v)
}
// SetMemoryMibRequestNil sets the value for MemoryMibRequest to be an explicit nil
func (o *NodePodInfoDto) SetMemoryMibRequestNil() {
	o.MemoryMibRequest.Set(nil)
}

// UnsetMemoryMibRequest ensures that no value is present for MemoryMibRequest, not even an explicit nil
func (o *NodePodInfoDto) UnsetMemoryMibRequest() {
	o.MemoryMibRequest.Unset()
}

// GetMetricsUsage returns the MetricsUsage field value
func (o *NodePodInfoDto) GetMetricsUsage() MetricsUsageDto {
	if o == nil {
		var ret MetricsUsageDto
		return ret
	}

	return o.MetricsUsage
}

// GetMetricsUsageOk returns a tuple with the MetricsUsage field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetMetricsUsageOk() (*MetricsUsageDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricsUsage, true
}

// SetMetricsUsage sets field value
func (o *NodePodInfoDto) SetMetricsUsage(v MetricsUsageDto) {
	o.MetricsUsage = v
}

// GetName returns the Name field value
func (o *NodePodInfoDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NodePodInfoDto) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *NodePodInfoDto) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *NodePodInfoDto) SetNamespace(v string) {
	o.Namespace = v
}

// GetQoveryServiceInfo returns the QoveryServiceInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodePodInfoDto) GetQoveryServiceInfo() PodQoveryServiceInfoDto {
	if o == nil || IsNil(o.QoveryServiceInfo.Get()) {
		var ret PodQoveryServiceInfoDto
		return ret
	}
	return *o.QoveryServiceInfo.Get()
}

// GetQoveryServiceInfoOk returns a tuple with the QoveryServiceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodePodInfoDto) GetQoveryServiceInfoOk() (*PodQoveryServiceInfoDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.QoveryServiceInfo.Get(), o.QoveryServiceInfo.IsSet()
}

// HasQoveryServiceInfo returns a boolean if a field has been set.
func (o *NodePodInfoDto) HasQoveryServiceInfo() bool {
	if o != nil && o.QoveryServiceInfo.IsSet() {
		return true
	}

	return false
}

// SetQoveryServiceInfo gets a reference to the given NullablePodQoveryServiceInfoDto and assigns it to the QoveryServiceInfo field.
func (o *NodePodInfoDto) SetQoveryServiceInfo(v PodQoveryServiceInfoDto) {
	o.QoveryServiceInfo.Set(&v)
}
// SetQoveryServiceInfoNil sets the value for QoveryServiceInfo to be an explicit nil
func (o *NodePodInfoDto) SetQoveryServiceInfoNil() {
	o.QoveryServiceInfo.Set(nil)
}

// UnsetQoveryServiceInfo ensures that no value is present for QoveryServiceInfo, not even an explicit nil
func (o *NodePodInfoDto) UnsetQoveryServiceInfo() {
	o.QoveryServiceInfo.Unset()
}

// GetRestartCount returns the RestartCount field value
func (o *NodePodInfoDto) GetRestartCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RestartCount
}

// GetRestartCountOk returns a tuple with the RestartCount field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetRestartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestartCount, true
}

// SetRestartCount sets field value
func (o *NodePodInfoDto) SetRestartCount(v int32) {
	o.RestartCount = v
}

// GetStatusPhase returns the StatusPhase field value
func (o *NodePodInfoDto) GetStatusPhase() PodStatusPhase {
	if o == nil {
		var ret PodStatusPhase
		return ret
	}

	return o.StatusPhase
}

// GetStatusPhaseOk returns a tuple with the StatusPhase field value
// and a boolean to check if the value has been set.
func (o *NodePodInfoDto) GetStatusPhaseOk() (*PodStatusPhase, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusPhase, true
}

// SetStatusPhase sets field value
func (o *NodePodInfoDto) SetStatusPhase(v PodStatusPhase) {
	o.StatusPhase = v
}

func (o NodePodInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodePodInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CpuMilliLimit.IsSet() {
		toSerialize["cpu_milli_limit"] = o.CpuMilliLimit.Get()
	}
	if o.CpuMilliRequest.IsSet() {
		toSerialize["cpu_milli_request"] = o.CpuMilliRequest.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	if o.EphemeralStorageMibLimit.IsSet() {
		toSerialize["ephemeral_storage_mib_limit"] = o.EphemeralStorageMibLimit.Get()
	}
	if o.EphemeralStorageMibRequest.IsSet() {
		toSerialize["ephemeral_storage_mib_request"] = o.EphemeralStorageMibRequest.Get()
	}
	toSerialize["error_container_statuses"] = o.ErrorContainerStatuses
	toSerialize["images_version"] = o.ImagesVersion
	if o.MemoryMibLimit.IsSet() {
		toSerialize["memory_mib_limit"] = o.MemoryMibLimit.Get()
	}
	if o.MemoryMibRequest.IsSet() {
		toSerialize["memory_mib_request"] = o.MemoryMibRequest.Get()
	}
	toSerialize["metrics_usage"] = o.MetricsUsage
	toSerialize["name"] = o.Name
	toSerialize["namespace"] = o.Namespace
	if o.QoveryServiceInfo.IsSet() {
		toSerialize["qovery_service_info"] = o.QoveryServiceInfo.Get()
	}
	toSerialize["restart_count"] = o.RestartCount
	toSerialize["status_phase"] = o.StatusPhase
	return toSerialize, nil
}

func (o *NodePodInfoDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"error_container_statuses",
		"images_version",
		"metrics_usage",
		"name",
		"namespace",
		"restart_count",
		"status_phase",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodePodInfoDto := _NodePodInfoDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNodePodInfoDto)

	if err != nil {
		return err
	}

	*o = NodePodInfoDto(varNodePodInfoDto)

	return err
}

type NullableNodePodInfoDto struct {
	value *NodePodInfoDto
	isSet bool
}

func (v NullableNodePodInfoDto) Get() *NodePodInfoDto {
	return v.value
}

func (v *NullableNodePodInfoDto) Set(val *NodePodInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNodePodInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNodePodInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodePodInfoDto(val *NodePodInfoDto) *NullableNodePodInfoDto {
	return &NullableNodePodInfoDto{value: val, isSet: true}
}

func (v NullableNodePodInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodePodInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


