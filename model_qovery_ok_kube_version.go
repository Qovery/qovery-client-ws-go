/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QoveryOkKubeVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoveryOkKubeVersion{}

// QoveryOkKubeVersion struct for QoveryOkKubeVersion
type QoveryOkKubeVersion struct {
	KubeVersion string `json:"kube_version"`
}

type _QoveryOkKubeVersion QoveryOkKubeVersion

// NewQoveryOkKubeVersion instantiates a new QoveryOkKubeVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoveryOkKubeVersion(kubeVersion string) *QoveryOkKubeVersion {
	this := QoveryOkKubeVersion{}
	this.KubeVersion = kubeVersion
	return &this
}

// NewQoveryOkKubeVersionWithDefaults instantiates a new QoveryOkKubeVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoveryOkKubeVersionWithDefaults() *QoveryOkKubeVersion {
	this := QoveryOkKubeVersion{}
	return &this
}

// GetKubeVersion returns the KubeVersion field value
func (o *QoveryOkKubeVersion) GetKubeVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubeVersion
}

// GetKubeVersionOk returns a tuple with the KubeVersion field value
// and a boolean to check if the value has been set.
func (o *QoveryOkKubeVersion) GetKubeVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubeVersion, true
}

// SetKubeVersion sets field value
func (o *QoveryOkKubeVersion) SetKubeVersion(v string) {
	o.KubeVersion = v
}

func (o QoveryOkKubeVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoveryOkKubeVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kube_version"] = o.KubeVersion
	return toSerialize, nil
}

func (o *QoveryOkKubeVersion) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kube_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQoveryOkKubeVersion := _QoveryOkKubeVersion{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQoveryOkKubeVersion)

	if err != nil {
		return err
	}

	*o = QoveryOkKubeVersion(varQoveryOkKubeVersion)

	return err
}

type NullableQoveryOkKubeVersion struct {
	value *QoveryOkKubeVersion
	isSet bool
}

func (v NullableQoveryOkKubeVersion) Get() *QoveryOkKubeVersion {
	return v.value
}

func (v *NullableQoveryOkKubeVersion) Set(val *QoveryOkKubeVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableQoveryOkKubeVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableQoveryOkKubeVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoveryOkKubeVersion(val *QoveryOkKubeVersion) *NullableQoveryOkKubeVersion {
	return &NullableQoveryOkKubeVersion{value: val, isSet: true}
}

func (v NullableQoveryOkKubeVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoveryOkKubeVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


