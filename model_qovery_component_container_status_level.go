/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"fmt"
)

// QoveryComponentContainerStatusLevel the model 'QoveryComponentContainerStatusLevel'
type QoveryComponentContainerStatusLevel string

// List of QoveryComponentContainerStatusLevel
const (
	QOVERYCOMPONENTCONTAINERSTATUSLEVEL_ERROR QoveryComponentContainerStatusLevel = "ERROR"
	QOVERYCOMPONENTCONTAINERSTATUSLEVEL_WARNING QoveryComponentContainerStatusLevel = "WARNING"
)

// All allowed values of QoveryComponentContainerStatusLevel enum
var AllowedQoveryComponentContainerStatusLevelEnumValues = []QoveryComponentContainerStatusLevel{
	"ERROR",
	"WARNING",
}

func (v *QoveryComponentContainerStatusLevel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := QoveryComponentContainerStatusLevel(value)
	for _, existing := range AllowedQoveryComponentContainerStatusLevelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid QoveryComponentContainerStatusLevel", value)
}

// NewQoveryComponentContainerStatusLevelFromValue returns a pointer to a valid QoveryComponentContainerStatusLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewQoveryComponentContainerStatusLevelFromValue(v string) (*QoveryComponentContainerStatusLevel, error) {
	ev := QoveryComponentContainerStatusLevel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for QoveryComponentContainerStatusLevel: valid values are %v", v, AllowedQoveryComponentContainerStatusLevelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v QoveryComponentContainerStatusLevel) IsValid() bool {
	for _, existing := range AllowedQoveryComponentContainerStatusLevelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to QoveryComponentContainerStatusLevel value
func (v QoveryComponentContainerStatusLevel) Ptr() *QoveryComponentContainerStatusLevel {
	return &v
}

type NullableQoveryComponentContainerStatusLevel struct {
	value *QoveryComponentContainerStatusLevel
	isSet bool
}

func (v NullableQoveryComponentContainerStatusLevel) Get() *QoveryComponentContainerStatusLevel {
	return v.value
}

func (v *NullableQoveryComponentContainerStatusLevel) Set(val *QoveryComponentContainerStatusLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableQoveryComponentContainerStatusLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableQoveryComponentContainerStatusLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoveryComponentContainerStatusLevel(val *QoveryComponentContainerStatusLevel) *NullableQoveryComponentContainerStatusLevel {
	return &NullableQoveryComponentContainerStatusLevel{value: val, isSet: true}
}

func (v NullableQoveryComponentContainerStatusLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoveryComponentContainerStatusLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

