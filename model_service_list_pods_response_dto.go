/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"fmt"
)

// checks if the ServiceListPodsResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceListPodsResponseDto{}

// ServiceListPodsResponseDto struct for ServiceListPodsResponseDto
type ServiceListPodsResponseDto struct {
	Pods []PodDto `json:"pods"`
	AdditionalProperties map[string]interface{}
}

type _ServiceListPodsResponseDto ServiceListPodsResponseDto

// NewServiceListPodsResponseDto instantiates a new ServiceListPodsResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceListPodsResponseDto(pods []PodDto) *ServiceListPodsResponseDto {
	this := ServiceListPodsResponseDto{}
	this.Pods = pods
	return &this
}

// NewServiceListPodsResponseDtoWithDefaults instantiates a new ServiceListPodsResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceListPodsResponseDtoWithDefaults() *ServiceListPodsResponseDto {
	this := ServiceListPodsResponseDto{}
	return &this
}

// GetPods returns the Pods field value
func (o *ServiceListPodsResponseDto) GetPods() []PodDto {
	if o == nil {
		var ret []PodDto
		return ret
	}

	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value
// and a boolean to check if the value has been set.
func (o *ServiceListPodsResponseDto) GetPodsOk() ([]PodDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pods, true
}

// SetPods sets field value
func (o *ServiceListPodsResponseDto) SetPods(v []PodDto) {
	o.Pods = v
}

func (o ServiceListPodsResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceListPodsResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pods"] = o.Pods

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceListPodsResponseDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pods",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceListPodsResponseDto := _ServiceListPodsResponseDto{}

	err = json.Unmarshal(data, &varServiceListPodsResponseDto)

	if err != nil {
		return err
	}

	*o = ServiceListPodsResponseDto(varServiceListPodsResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pods")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceListPodsResponseDto struct {
	value *ServiceListPodsResponseDto
	isSet bool
}

func (v NullableServiceListPodsResponseDto) Get() *ServiceListPodsResponseDto {
	return v.value
}

func (v *NullableServiceListPodsResponseDto) Set(val *ServiceListPodsResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceListPodsResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceListPodsResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceListPodsResponseDto(val *ServiceListPodsResponseDto) *NullableServiceListPodsResponseDto {
	return &NullableServiceListPodsResponseDto{value: val, isSet: true}
}

func (v NullableServiceListPodsResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceListPodsResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


