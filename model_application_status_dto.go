/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
)

// checks if the ApplicationStatusDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationStatusDto{}

// ApplicationStatusDto struct for ApplicationStatusDto
type ApplicationStatusDto struct {
	Certificates []CertificateStatusDto `json:"certificates"`
	Id string `json:"id"`
	Pods []PodStatusDto `json:"pods"`
	State ServiceStateDto `json:"state"`
}

// NewApplicationStatusDto instantiates a new ApplicationStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationStatusDto(certificates []CertificateStatusDto, id string, pods []PodStatusDto, state ServiceStateDto) *ApplicationStatusDto {
	this := ApplicationStatusDto{}
	this.Certificates = certificates
	this.Id = id
	this.Pods = pods
	this.State = state
	return &this
}

// NewApplicationStatusDtoWithDefaults instantiates a new ApplicationStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationStatusDtoWithDefaults() *ApplicationStatusDto {
	this := ApplicationStatusDto{}
	return &this
}

// GetCertificates returns the Certificates field value
func (o *ApplicationStatusDto) GetCertificates() []CertificateStatusDto {
	if o == nil {
		var ret []CertificateStatusDto
		return ret
	}

	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value
// and a boolean to check if the value has been set.
func (o *ApplicationStatusDto) GetCertificatesOk() ([]CertificateStatusDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Certificates, true
}

// SetCertificates sets field value
func (o *ApplicationStatusDto) SetCertificates(v []CertificateStatusDto) {
	o.Certificates = v
}

// GetId returns the Id field value
func (o *ApplicationStatusDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApplicationStatusDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApplicationStatusDto) SetId(v string) {
	o.Id = v
}

// GetPods returns the Pods field value
func (o *ApplicationStatusDto) GetPods() []PodStatusDto {
	if o == nil {
		var ret []PodStatusDto
		return ret
	}

	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value
// and a boolean to check if the value has been set.
func (o *ApplicationStatusDto) GetPodsOk() ([]PodStatusDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pods, true
}

// SetPods sets field value
func (o *ApplicationStatusDto) SetPods(v []PodStatusDto) {
	o.Pods = v
}

// GetState returns the State field value
func (o *ApplicationStatusDto) GetState() ServiceStateDto {
	if o == nil {
		var ret ServiceStateDto
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ApplicationStatusDto) GetStateOk() (*ServiceStateDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ApplicationStatusDto) SetState(v ServiceStateDto) {
	o.State = v
}

func (o ApplicationStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationStatusDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["certificates"] = o.Certificates
	toSerialize["id"] = o.Id
	toSerialize["pods"] = o.Pods
	toSerialize["state"] = o.State
	return toSerialize, nil
}

type NullableApplicationStatusDto struct {
	value *ApplicationStatusDto
	isSet bool
}

func (v NullableApplicationStatusDto) Get() *ApplicationStatusDto {
	return v.value
}

func (v *NullableApplicationStatusDto) Set(val *ApplicationStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationStatusDto(val *ApplicationStatusDto) *NullableApplicationStatusDto {
	return &NullableApplicationStatusDto{value: val, isSet: true}
}

func (v NullableApplicationStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


