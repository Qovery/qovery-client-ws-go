/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"fmt"
)

// ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner - struct for ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner
type ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner struct {
	QoveryMissingComponentInFailure *QoveryMissingComponentInFailure
	QoveryPodInErrorComponentInFailure *QoveryPodInErrorComponentInFailure
}

// QoveryMissingComponentInFailureAsClusterStatusDtoComputedStatusQoveryComponentsInFailureInner is a convenience function that returns QoveryMissingComponentInFailure wrapped in ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner
func QoveryMissingComponentInFailureAsClusterStatusDtoComputedStatusQoveryComponentsInFailureInner(v *QoveryMissingComponentInFailure) ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner {
	return ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner{
		QoveryMissingComponentInFailure: v,
	}
}

// QoveryPodInErrorComponentInFailureAsClusterStatusDtoComputedStatusQoveryComponentsInFailureInner is a convenience function that returns QoveryPodInErrorComponentInFailure wrapped in ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner
func QoveryPodInErrorComponentInFailureAsClusterStatusDtoComputedStatusQoveryComponentsInFailureInner(v *QoveryPodInErrorComponentInFailure) ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner {
	return ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner{
		QoveryPodInErrorComponentInFailure: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into QoveryMissingComponentInFailure
	err = newStrictDecoder(data).Decode(&dst.QoveryMissingComponentInFailure)
	if err == nil {
		jsonQoveryMissingComponentInFailure, _ := json.Marshal(dst.QoveryMissingComponentInFailure)
		if string(jsonQoveryMissingComponentInFailure) == "{}" { // empty struct
			dst.QoveryMissingComponentInFailure = nil
		} else {
			match++
		}
	} else {
		dst.QoveryMissingComponentInFailure = nil
	}

	// try to unmarshal data into QoveryPodInErrorComponentInFailure
	err = newStrictDecoder(data).Decode(&dst.QoveryPodInErrorComponentInFailure)
	if err == nil {
		jsonQoveryPodInErrorComponentInFailure, _ := json.Marshal(dst.QoveryPodInErrorComponentInFailure)
		if string(jsonQoveryPodInErrorComponentInFailure) == "{}" { // empty struct
			dst.QoveryPodInErrorComponentInFailure = nil
		} else {
			match++
		}
	} else {
		dst.QoveryPodInErrorComponentInFailure = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.QoveryMissingComponentInFailure = nil
		dst.QoveryPodInErrorComponentInFailure = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) MarshalJSON() ([]byte, error) {
	if src.QoveryMissingComponentInFailure != nil {
		return json.Marshal(&src.QoveryMissingComponentInFailure)
	}

	if src.QoveryPodInErrorComponentInFailure != nil {
		return json.Marshal(&src.QoveryPodInErrorComponentInFailure)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.QoveryMissingComponentInFailure != nil {
		return obj.QoveryMissingComponentInFailure
	}

	if obj.QoveryPodInErrorComponentInFailure != nil {
		return obj.QoveryPodInErrorComponentInFailure
	}

	// all schemas are nil
	return nil
}

type NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner struct {
	value *ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner
	isSet bool
}

func (v NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) Get() *ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner {
	return v.value
}

func (v *NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) Set(val *ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner(val *ClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) *NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner {
	return &NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner{value: val, isSet: true}
}

func (v NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusDtoComputedStatusQoveryComponentsInFailureInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


