/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
)

// checks if the MetricsUsageDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsUsageDto{}

// MetricsUsageDto struct for MetricsUsageDto
type MetricsUsageDto struct {
	CpuMilliUsage NullableInt32 `json:"cpu_milli_usage,omitempty"`
	CpuPercentUsage NullableInt32 `json:"cpu_percent_usage,omitempty"`
	DiskMibUsage NullableInt32 `json:"disk_mib_usage,omitempty"`
	DiskPercentUsage NullableInt32 `json:"disk_percent_usage,omitempty"`
	MemoryMibRssUsage NullableInt32 `json:"memory_mib_rss_usage,omitempty"`
	MemoryMibWorkingSetUsage NullableInt32 `json:"memory_mib_working_set_usage,omitempty"`
	MemoryPercentRssUsage NullableInt32 `json:"memory_percent_rss_usage,omitempty"`
	MemoryPercentWorkingSetUsage NullableInt32 `json:"memory_percent_working_set_usage,omitempty"`
}

// NewMetricsUsageDto instantiates a new MetricsUsageDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsUsageDto() *MetricsUsageDto {
	this := MetricsUsageDto{}
	return &this
}

// NewMetricsUsageDtoWithDefaults instantiates a new MetricsUsageDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsUsageDtoWithDefaults() *MetricsUsageDto {
	this := MetricsUsageDto{}
	return &this
}

// GetCpuMilliUsage returns the CpuMilliUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetCpuMilliUsage() int32 {
	if o == nil || IsNil(o.CpuMilliUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.CpuMilliUsage.Get()
}

// GetCpuMilliUsageOk returns a tuple with the CpuMilliUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetCpuMilliUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuMilliUsage.Get(), o.CpuMilliUsage.IsSet()
}

// HasCpuMilliUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasCpuMilliUsage() bool {
	if o != nil && o.CpuMilliUsage.IsSet() {
		return true
	}

	return false
}

// SetCpuMilliUsage gets a reference to the given NullableInt32 and assigns it to the CpuMilliUsage field.
func (o *MetricsUsageDto) SetCpuMilliUsage(v int32) {
	o.CpuMilliUsage.Set(&v)
}
// SetCpuMilliUsageNil sets the value for CpuMilliUsage to be an explicit nil
func (o *MetricsUsageDto) SetCpuMilliUsageNil() {
	o.CpuMilliUsage.Set(nil)
}

// UnsetCpuMilliUsage ensures that no value is present for CpuMilliUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetCpuMilliUsage() {
	o.CpuMilliUsage.Unset()
}

// GetCpuPercentUsage returns the CpuPercentUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetCpuPercentUsage() int32 {
	if o == nil || IsNil(o.CpuPercentUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.CpuPercentUsage.Get()
}

// GetCpuPercentUsageOk returns a tuple with the CpuPercentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetCpuPercentUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuPercentUsage.Get(), o.CpuPercentUsage.IsSet()
}

// HasCpuPercentUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasCpuPercentUsage() bool {
	if o != nil && o.CpuPercentUsage.IsSet() {
		return true
	}

	return false
}

// SetCpuPercentUsage gets a reference to the given NullableInt32 and assigns it to the CpuPercentUsage field.
func (o *MetricsUsageDto) SetCpuPercentUsage(v int32) {
	o.CpuPercentUsage.Set(&v)
}
// SetCpuPercentUsageNil sets the value for CpuPercentUsage to be an explicit nil
func (o *MetricsUsageDto) SetCpuPercentUsageNil() {
	o.CpuPercentUsage.Set(nil)
}

// UnsetCpuPercentUsage ensures that no value is present for CpuPercentUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetCpuPercentUsage() {
	o.CpuPercentUsage.Unset()
}

// GetDiskMibUsage returns the DiskMibUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetDiskMibUsage() int32 {
	if o == nil || IsNil(o.DiskMibUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.DiskMibUsage.Get()
}

// GetDiskMibUsageOk returns a tuple with the DiskMibUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetDiskMibUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskMibUsage.Get(), o.DiskMibUsage.IsSet()
}

// HasDiskMibUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasDiskMibUsage() bool {
	if o != nil && o.DiskMibUsage.IsSet() {
		return true
	}

	return false
}

// SetDiskMibUsage gets a reference to the given NullableInt32 and assigns it to the DiskMibUsage field.
func (o *MetricsUsageDto) SetDiskMibUsage(v int32) {
	o.DiskMibUsage.Set(&v)
}
// SetDiskMibUsageNil sets the value for DiskMibUsage to be an explicit nil
func (o *MetricsUsageDto) SetDiskMibUsageNil() {
	o.DiskMibUsage.Set(nil)
}

// UnsetDiskMibUsage ensures that no value is present for DiskMibUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetDiskMibUsage() {
	o.DiskMibUsage.Unset()
}

// GetDiskPercentUsage returns the DiskPercentUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetDiskPercentUsage() int32 {
	if o == nil || IsNil(o.DiskPercentUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.DiskPercentUsage.Get()
}

// GetDiskPercentUsageOk returns a tuple with the DiskPercentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetDiskPercentUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskPercentUsage.Get(), o.DiskPercentUsage.IsSet()
}

// HasDiskPercentUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasDiskPercentUsage() bool {
	if o != nil && o.DiskPercentUsage.IsSet() {
		return true
	}

	return false
}

// SetDiskPercentUsage gets a reference to the given NullableInt32 and assigns it to the DiskPercentUsage field.
func (o *MetricsUsageDto) SetDiskPercentUsage(v int32) {
	o.DiskPercentUsage.Set(&v)
}
// SetDiskPercentUsageNil sets the value for DiskPercentUsage to be an explicit nil
func (o *MetricsUsageDto) SetDiskPercentUsageNil() {
	o.DiskPercentUsage.Set(nil)
}

// UnsetDiskPercentUsage ensures that no value is present for DiskPercentUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetDiskPercentUsage() {
	o.DiskPercentUsage.Unset()
}

// GetMemoryMibRssUsage returns the MemoryMibRssUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetMemoryMibRssUsage() int32 {
	if o == nil || IsNil(o.MemoryMibRssUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryMibRssUsage.Get()
}

// GetMemoryMibRssUsageOk returns a tuple with the MemoryMibRssUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetMemoryMibRssUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryMibRssUsage.Get(), o.MemoryMibRssUsage.IsSet()
}

// HasMemoryMibRssUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasMemoryMibRssUsage() bool {
	if o != nil && o.MemoryMibRssUsage.IsSet() {
		return true
	}

	return false
}

// SetMemoryMibRssUsage gets a reference to the given NullableInt32 and assigns it to the MemoryMibRssUsage field.
func (o *MetricsUsageDto) SetMemoryMibRssUsage(v int32) {
	o.MemoryMibRssUsage.Set(&v)
}
// SetMemoryMibRssUsageNil sets the value for MemoryMibRssUsage to be an explicit nil
func (o *MetricsUsageDto) SetMemoryMibRssUsageNil() {
	o.MemoryMibRssUsage.Set(nil)
}

// UnsetMemoryMibRssUsage ensures that no value is present for MemoryMibRssUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetMemoryMibRssUsage() {
	o.MemoryMibRssUsage.Unset()
}

// GetMemoryMibWorkingSetUsage returns the MemoryMibWorkingSetUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetMemoryMibWorkingSetUsage() int32 {
	if o == nil || IsNil(o.MemoryMibWorkingSetUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryMibWorkingSetUsage.Get()
}

// GetMemoryMibWorkingSetUsageOk returns a tuple with the MemoryMibWorkingSetUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetMemoryMibWorkingSetUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryMibWorkingSetUsage.Get(), o.MemoryMibWorkingSetUsage.IsSet()
}

// HasMemoryMibWorkingSetUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasMemoryMibWorkingSetUsage() bool {
	if o != nil && o.MemoryMibWorkingSetUsage.IsSet() {
		return true
	}

	return false
}

// SetMemoryMibWorkingSetUsage gets a reference to the given NullableInt32 and assigns it to the MemoryMibWorkingSetUsage field.
func (o *MetricsUsageDto) SetMemoryMibWorkingSetUsage(v int32) {
	o.MemoryMibWorkingSetUsage.Set(&v)
}
// SetMemoryMibWorkingSetUsageNil sets the value for MemoryMibWorkingSetUsage to be an explicit nil
func (o *MetricsUsageDto) SetMemoryMibWorkingSetUsageNil() {
	o.MemoryMibWorkingSetUsage.Set(nil)
}

// UnsetMemoryMibWorkingSetUsage ensures that no value is present for MemoryMibWorkingSetUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetMemoryMibWorkingSetUsage() {
	o.MemoryMibWorkingSetUsage.Unset()
}

// GetMemoryPercentRssUsage returns the MemoryPercentRssUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetMemoryPercentRssUsage() int32 {
	if o == nil || IsNil(o.MemoryPercentRssUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryPercentRssUsage.Get()
}

// GetMemoryPercentRssUsageOk returns a tuple with the MemoryPercentRssUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetMemoryPercentRssUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryPercentRssUsage.Get(), o.MemoryPercentRssUsage.IsSet()
}

// HasMemoryPercentRssUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasMemoryPercentRssUsage() bool {
	if o != nil && o.MemoryPercentRssUsage.IsSet() {
		return true
	}

	return false
}

// SetMemoryPercentRssUsage gets a reference to the given NullableInt32 and assigns it to the MemoryPercentRssUsage field.
func (o *MetricsUsageDto) SetMemoryPercentRssUsage(v int32) {
	o.MemoryPercentRssUsage.Set(&v)
}
// SetMemoryPercentRssUsageNil sets the value for MemoryPercentRssUsage to be an explicit nil
func (o *MetricsUsageDto) SetMemoryPercentRssUsageNil() {
	o.MemoryPercentRssUsage.Set(nil)
}

// UnsetMemoryPercentRssUsage ensures that no value is present for MemoryPercentRssUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetMemoryPercentRssUsage() {
	o.MemoryPercentRssUsage.Unset()
}

// GetMemoryPercentWorkingSetUsage returns the MemoryPercentWorkingSetUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricsUsageDto) GetMemoryPercentWorkingSetUsage() int32 {
	if o == nil || IsNil(o.MemoryPercentWorkingSetUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryPercentWorkingSetUsage.Get()
}

// GetMemoryPercentWorkingSetUsageOk returns a tuple with the MemoryPercentWorkingSetUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricsUsageDto) GetMemoryPercentWorkingSetUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryPercentWorkingSetUsage.Get(), o.MemoryPercentWorkingSetUsage.IsSet()
}

// HasMemoryPercentWorkingSetUsage returns a boolean if a field has been set.
func (o *MetricsUsageDto) HasMemoryPercentWorkingSetUsage() bool {
	if o != nil && o.MemoryPercentWorkingSetUsage.IsSet() {
		return true
	}

	return false
}

// SetMemoryPercentWorkingSetUsage gets a reference to the given NullableInt32 and assigns it to the MemoryPercentWorkingSetUsage field.
func (o *MetricsUsageDto) SetMemoryPercentWorkingSetUsage(v int32) {
	o.MemoryPercentWorkingSetUsage.Set(&v)
}
// SetMemoryPercentWorkingSetUsageNil sets the value for MemoryPercentWorkingSetUsage to be an explicit nil
func (o *MetricsUsageDto) SetMemoryPercentWorkingSetUsageNil() {
	o.MemoryPercentWorkingSetUsage.Set(nil)
}

// UnsetMemoryPercentWorkingSetUsage ensures that no value is present for MemoryPercentWorkingSetUsage, not even an explicit nil
func (o *MetricsUsageDto) UnsetMemoryPercentWorkingSetUsage() {
	o.MemoryPercentWorkingSetUsage.Unset()
}

func (o MetricsUsageDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsUsageDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CpuMilliUsage.IsSet() {
		toSerialize["cpu_milli_usage"] = o.CpuMilliUsage.Get()
	}
	if o.CpuPercentUsage.IsSet() {
		toSerialize["cpu_percent_usage"] = o.CpuPercentUsage.Get()
	}
	if o.DiskMibUsage.IsSet() {
		toSerialize["disk_mib_usage"] = o.DiskMibUsage.Get()
	}
	if o.DiskPercentUsage.IsSet() {
		toSerialize["disk_percent_usage"] = o.DiskPercentUsage.Get()
	}
	if o.MemoryMibRssUsage.IsSet() {
		toSerialize["memory_mib_rss_usage"] = o.MemoryMibRssUsage.Get()
	}
	if o.MemoryMibWorkingSetUsage.IsSet() {
		toSerialize["memory_mib_working_set_usage"] = o.MemoryMibWorkingSetUsage.Get()
	}
	if o.MemoryPercentRssUsage.IsSet() {
		toSerialize["memory_percent_rss_usage"] = o.MemoryPercentRssUsage.Get()
	}
	if o.MemoryPercentWorkingSetUsage.IsSet() {
		toSerialize["memory_percent_working_set_usage"] = o.MemoryPercentWorkingSetUsage.Get()
	}
	return toSerialize, nil
}

type NullableMetricsUsageDto struct {
	value *MetricsUsageDto
	isSet bool
}

func (v NullableMetricsUsageDto) Get() *MetricsUsageDto {
	return v.value
}

func (v *NullableMetricsUsageDto) Set(val *MetricsUsageDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsUsageDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsUsageDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsUsageDto(val *MetricsUsageDto) *NullableMetricsUsageDto {
	return &NullableMetricsUsageDto{value: val, isSet: true}
}

func (v NullableMetricsUsageDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsUsageDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


