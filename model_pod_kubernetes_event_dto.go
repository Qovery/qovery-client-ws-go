/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PodKubernetesEventDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodKubernetesEventDto{}

// PodKubernetesEventDto struct for PodKubernetesEventDto
type PodKubernetesEventDto struct {
	CreatedAt int64 `json:"created_at"`
	Message string `json:"message"`
	Reason string `json:"reason"`
	Type string `json:"type"`
}

type _PodKubernetesEventDto PodKubernetesEventDto

// NewPodKubernetesEventDto instantiates a new PodKubernetesEventDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodKubernetesEventDto(createdAt int64, message string, reason string, type_ string) *PodKubernetesEventDto {
	this := PodKubernetesEventDto{}
	this.CreatedAt = createdAt
	this.Message = message
	this.Reason = reason
	this.Type = type_
	return &this
}

// NewPodKubernetesEventDtoWithDefaults instantiates a new PodKubernetesEventDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodKubernetesEventDtoWithDefaults() *PodKubernetesEventDto {
	this := PodKubernetesEventDto{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PodKubernetesEventDto) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PodKubernetesEventDto) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PodKubernetesEventDto) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetMessage returns the Message field value
func (o *PodKubernetesEventDto) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PodKubernetesEventDto) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PodKubernetesEventDto) SetMessage(v string) {
	o.Message = v
}

// GetReason returns the Reason field value
func (o *PodKubernetesEventDto) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *PodKubernetesEventDto) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *PodKubernetesEventDto) SetReason(v string) {
	o.Reason = v
}

// GetType returns the Type field value
func (o *PodKubernetesEventDto) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PodKubernetesEventDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PodKubernetesEventDto) SetType(v string) {
	o.Type = v
}

func (o PodKubernetesEventDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodKubernetesEventDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["message"] = o.Message
	toSerialize["reason"] = o.Reason
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PodKubernetesEventDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"message",
		"reason",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPodKubernetesEventDto := _PodKubernetesEventDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPodKubernetesEventDto)

	if err != nil {
		return err
	}

	*o = PodKubernetesEventDto(varPodKubernetesEventDto)

	return err
}

type NullablePodKubernetesEventDto struct {
	value *PodKubernetesEventDto
	isSet bool
}

func (v NullablePodKubernetesEventDto) Get() *PodKubernetesEventDto {
	return v.value
}

func (v *NullablePodKubernetesEventDto) Set(val *PodKubernetesEventDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePodKubernetesEventDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePodKubernetesEventDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodKubernetesEventDto(val *PodKubernetesEventDto) *NullablePodKubernetesEventDto {
	return &NullablePodKubernetesEventDto{value: val, isSet: true}
}

func (v NullablePodKubernetesEventDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodKubernetesEventDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


