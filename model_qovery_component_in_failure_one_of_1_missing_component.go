/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QoveryComponentInFailureOneOf1MISSINGCOMPONENT type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoveryComponentInFailureOneOf1MISSINGCOMPONENT{}

// QoveryComponentInFailureOneOf1MISSINGCOMPONENT struct for QoveryComponentInFailureOneOf1MISSINGCOMPONENT
type QoveryComponentInFailureOneOf1MISSINGCOMPONENT struct {
	ComponentName string `json:"component_name"`
}

type _QoveryComponentInFailureOneOf1MISSINGCOMPONENT QoveryComponentInFailureOneOf1MISSINGCOMPONENT

// NewQoveryComponentInFailureOneOf1MISSINGCOMPONENT instantiates a new QoveryComponentInFailureOneOf1MISSINGCOMPONENT object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoveryComponentInFailureOneOf1MISSINGCOMPONENT(componentName string) *QoveryComponentInFailureOneOf1MISSINGCOMPONENT {
	this := QoveryComponentInFailureOneOf1MISSINGCOMPONENT{}
	this.ComponentName = componentName
	return &this
}

// NewQoveryComponentInFailureOneOf1MISSINGCOMPONENTWithDefaults instantiates a new QoveryComponentInFailureOneOf1MISSINGCOMPONENT object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoveryComponentInFailureOneOf1MISSINGCOMPONENTWithDefaults() *QoveryComponentInFailureOneOf1MISSINGCOMPONENT {
	this := QoveryComponentInFailureOneOf1MISSINGCOMPONENT{}
	return &this
}

// GetComponentName returns the ComponentName field value
func (o *QoveryComponentInFailureOneOf1MISSINGCOMPONENT) GetComponentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComponentName
}

// GetComponentNameOk returns a tuple with the ComponentName field value
// and a boolean to check if the value has been set.
func (o *QoveryComponentInFailureOneOf1MISSINGCOMPONENT) GetComponentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentName, true
}

// SetComponentName sets field value
func (o *QoveryComponentInFailureOneOf1MISSINGCOMPONENT) SetComponentName(v string) {
	o.ComponentName = v
}

func (o QoveryComponentInFailureOneOf1MISSINGCOMPONENT) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoveryComponentInFailureOneOf1MISSINGCOMPONENT) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component_name"] = o.ComponentName
	return toSerialize, nil
}

func (o *QoveryComponentInFailureOneOf1MISSINGCOMPONENT) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQoveryComponentInFailureOneOf1MISSINGCOMPONENT := _QoveryComponentInFailureOneOf1MISSINGCOMPONENT{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQoveryComponentInFailureOneOf1MISSINGCOMPONENT)

	if err != nil {
		return err
	}

	*o = QoveryComponentInFailureOneOf1MISSINGCOMPONENT(varQoveryComponentInFailureOneOf1MISSINGCOMPONENT)

	return err
}

type NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT struct {
	value *QoveryComponentInFailureOneOf1MISSINGCOMPONENT
	isSet bool
}

func (v NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT) Get() *QoveryComponentInFailureOneOf1MISSINGCOMPONENT {
	return v.value
}

func (v *NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT) Set(val *QoveryComponentInFailureOneOf1MISSINGCOMPONENT) {
	v.value = val
	v.isSet = true
}

func (v NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT) IsSet() bool {
	return v.isSet
}

func (v *NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT(val *QoveryComponentInFailureOneOf1MISSINGCOMPONENT) *NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT {
	return &NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT{value: val, isSet: true}
}

func (v NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoveryComponentInFailureOneOf1MISSINGCOMPONENT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


