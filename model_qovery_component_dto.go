/*
websocket-gateway

Describe the websocket endpoints of Qovery

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QoveryComponentDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoveryComponentDto{}

// QoveryComponentDto struct for QoveryComponentDto
type QoveryComponentDto struct {
	ErrorDetail []QoveryComponentInFailure `json:"error_detail"`
	ImagesVersion []string `json:"images_version"`
	Name string `json:"name"`
	Namespace string `json:"namespace"`
	Status QoveryComponentStatus `json:"status"`
}

type _QoveryComponentDto QoveryComponentDto

// NewQoveryComponentDto instantiates a new QoveryComponentDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoveryComponentDto(errorDetail []QoveryComponentInFailure, imagesVersion []string, name string, namespace string, status QoveryComponentStatus) *QoveryComponentDto {
	this := QoveryComponentDto{}
	this.ErrorDetail = errorDetail
	this.ImagesVersion = imagesVersion
	this.Name = name
	this.Namespace = namespace
	this.Status = status
	return &this
}

// NewQoveryComponentDtoWithDefaults instantiates a new QoveryComponentDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoveryComponentDtoWithDefaults() *QoveryComponentDto {
	this := QoveryComponentDto{}
	return &this
}

// GetErrorDetail returns the ErrorDetail field value
func (o *QoveryComponentDto) GetErrorDetail() []QoveryComponentInFailure {
	if o == nil {
		var ret []QoveryComponentInFailure
		return ret
	}

	return o.ErrorDetail
}

// GetErrorDetailOk returns a tuple with the ErrorDetail field value
// and a boolean to check if the value has been set.
func (o *QoveryComponentDto) GetErrorDetailOk() ([]QoveryComponentInFailure, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorDetail, true
}

// SetErrorDetail sets field value
func (o *QoveryComponentDto) SetErrorDetail(v []QoveryComponentInFailure) {
	o.ErrorDetail = v
}

// GetImagesVersion returns the ImagesVersion field value
func (o *QoveryComponentDto) GetImagesVersion() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ImagesVersion
}

// GetImagesVersionOk returns a tuple with the ImagesVersion field value
// and a boolean to check if the value has been set.
func (o *QoveryComponentDto) GetImagesVersionOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImagesVersion, true
}

// SetImagesVersion sets field value
func (o *QoveryComponentDto) SetImagesVersion(v []string) {
	o.ImagesVersion = v
}

// GetName returns the Name field value
func (o *QoveryComponentDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QoveryComponentDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QoveryComponentDto) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *QoveryComponentDto) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *QoveryComponentDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *QoveryComponentDto) SetNamespace(v string) {
	o.Namespace = v
}

// GetStatus returns the Status field value
func (o *QoveryComponentDto) GetStatus() QoveryComponentStatus {
	if o == nil {
		var ret QoveryComponentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *QoveryComponentDto) GetStatusOk() (*QoveryComponentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *QoveryComponentDto) SetStatus(v QoveryComponentStatus) {
	o.Status = v
}

func (o QoveryComponentDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoveryComponentDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error_detail"] = o.ErrorDetail
	toSerialize["images_version"] = o.ImagesVersion
	toSerialize["name"] = o.Name
	toSerialize["namespace"] = o.Namespace
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *QoveryComponentDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"error_detail",
		"images_version",
		"name",
		"namespace",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQoveryComponentDto := _QoveryComponentDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQoveryComponentDto)

	if err != nil {
		return err
	}

	*o = QoveryComponentDto(varQoveryComponentDto)

	return err
}

type NullableQoveryComponentDto struct {
	value *QoveryComponentDto
	isSet bool
}

func (v NullableQoveryComponentDto) Get() *QoveryComponentDto {
	return v.value
}

func (v *NullableQoveryComponentDto) Set(val *QoveryComponentDto) {
	v.value = val
	v.isSet = true
}

func (v NullableQoveryComponentDto) IsSet() bool {
	return v.isSet
}

func (v *NullableQoveryComponentDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoveryComponentDto(val *QoveryComponentDto) *NullableQoveryComponentDto {
	return &NullableQoveryComponentDto{value: val, isSet: true}
}

func (v NullableQoveryComponentDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoveryComponentDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


