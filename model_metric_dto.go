/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// MetricDto struct for MetricDto
type MetricDto struct {
	Current int32 `json:"current"`
	CurrentPercent int32 `json:"current_percent"`
	Limit int32 `json:"limit"`
	Name NullableString `json:"name,omitempty"`
	Status ResourceStatusDto `json:"status"`
	Unit UnitDto `json:"unit"`
}

// NewMetricDto instantiates a new MetricDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDto(current int32, currentPercent int32, limit int32, status ResourceStatusDto, unit UnitDto) *MetricDto {
	this := MetricDto{}
	this.Current = current
	this.CurrentPercent = currentPercent
	this.Limit = limit
	this.Status = status
	this.Unit = unit
	return &this
}

// NewMetricDtoWithDefaults instantiates a new MetricDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDtoWithDefaults() *MetricDto {
	this := MetricDto{}
	return &this
}

// GetCurrent returns the Current field value
func (o *MetricDto) GetCurrent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value
// and a boolean to check if the value has been set.
func (o *MetricDto) GetCurrentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Current, true
}

// SetCurrent sets field value
func (o *MetricDto) SetCurrent(v int32) {
	o.Current = v
}

// GetCurrentPercent returns the CurrentPercent field value
func (o *MetricDto) GetCurrentPercent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentPercent
}

// GetCurrentPercentOk returns a tuple with the CurrentPercent field value
// and a boolean to check if the value has been set.
func (o *MetricDto) GetCurrentPercentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPercent, true
}

// SetCurrentPercent sets field value
func (o *MetricDto) SetCurrentPercent(v int32) {
	o.CurrentPercent = v
}

// GetLimit returns the Limit field value
func (o *MetricDto) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *MetricDto) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *MetricDto) SetLimit(v int32) {
	o.Limit = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MetricDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MetricDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MetricDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MetricDto) UnsetName() {
	o.Name.Unset()
}

// GetStatus returns the Status field value
func (o *MetricDto) GetStatus() ResourceStatusDto {
	if o == nil {
		var ret ResourceStatusDto
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MetricDto) GetStatusOk() (*ResourceStatusDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MetricDto) SetStatus(v ResourceStatusDto) {
	o.Status = v
}

// GetUnit returns the Unit field value
func (o *MetricDto) GetUnit() UnitDto {
	if o == nil {
		var ret UnitDto
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *MetricDto) GetUnitOk() (*UnitDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *MetricDto) SetUnit(v UnitDto) {
	o.Unit = v
}

func (o MetricDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["current"] = o.Current
	}
	if true {
		toSerialize["current_percent"] = o.CurrentPercent
	}
	if true {
		toSerialize["limit"] = o.Limit
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableMetricDto struct {
	value *MetricDto
	isSet bool
}

func (v NullableMetricDto) Get() *MetricDto {
	return v.value
}

func (v *NullableMetricDto) Set(val *MetricDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDto(val *MetricDto) *NullableMetricDto {
	return &NullableMetricDto{value: val, isSet: true}
}

func (v NullableMetricDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


