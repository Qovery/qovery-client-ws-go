/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"fmt"
)

// ClusterStatusGlobalStatus the model 'ClusterStatusGlobalStatus'
type ClusterStatusGlobalStatus string

// List of ClusterStatusGlobalStatus
const (
	CLUSTERSTATUSGLOBALSTATUS_RUNNING ClusterStatusGlobalStatus = "RUNNING"
	CLUSTERSTATUSGLOBALSTATUS_WARNING ClusterStatusGlobalStatus = "WARNING"
	CLUSTERSTATUSGLOBALSTATUS_ERROR ClusterStatusGlobalStatus = "ERROR"
)

// All allowed values of ClusterStatusGlobalStatus enum
var AllowedClusterStatusGlobalStatusEnumValues = []ClusterStatusGlobalStatus{
	"RUNNING",
	"WARNING",
	"ERROR",
}

func (v *ClusterStatusGlobalStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClusterStatusGlobalStatus(value)
	for _, existing := range AllowedClusterStatusGlobalStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClusterStatusGlobalStatus", value)
}

// NewClusterStatusGlobalStatusFromValue returns a pointer to a valid ClusterStatusGlobalStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClusterStatusGlobalStatusFromValue(v string) (*ClusterStatusGlobalStatus, error) {
	ev := ClusterStatusGlobalStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClusterStatusGlobalStatus: valid values are %v", v, AllowedClusterStatusGlobalStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClusterStatusGlobalStatus) IsValid() bool {
	for _, existing := range AllowedClusterStatusGlobalStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ClusterStatusGlobalStatus value
func (v ClusterStatusGlobalStatus) Ptr() *ClusterStatusGlobalStatus {
	return &v
}

type NullableClusterStatusGlobalStatus struct {
	value *ClusterStatusGlobalStatus
	isSet bool
}

func (v NullableClusterStatusGlobalStatus) Get() *ClusterStatusGlobalStatus {
	return v.value
}

func (v *NullableClusterStatusGlobalStatus) Set(val *ClusterStatusGlobalStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusGlobalStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusGlobalStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusGlobalStatus(val *ClusterStatusGlobalStatus) *NullableClusterStatusGlobalStatus {
	return &NullableClusterStatusGlobalStatus{value: val, isSet: true}
}

func (v NullableClusterStatusGlobalStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusGlobalStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

