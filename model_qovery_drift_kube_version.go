/*
websocket-gateway

Describe the weboscket endpoints

API version: 0.1.0
Contact: erebe@erebe.eu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery-ws

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QoveryDriftKubeVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoveryDriftKubeVersion{}

// QoveryDriftKubeVersion struct for QoveryDriftKubeVersion
type QoveryDriftKubeVersion struct {
	KubeVersion string `json:"kube_version"`
	ExpectedKubeVersion string `json:"expected_kube_version"`
}

type _QoveryDriftKubeVersion QoveryDriftKubeVersion

// NewQoveryDriftKubeVersion instantiates a new QoveryDriftKubeVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoveryDriftKubeVersion(kubeVersion string, expectedKubeVersion string) *QoveryDriftKubeVersion {
	this := QoveryDriftKubeVersion{}
	this.KubeVersion = kubeVersion
	this.ExpectedKubeVersion = expectedKubeVersion
	return &this
}

// NewQoveryDriftKubeVersionWithDefaults instantiates a new QoveryDriftKubeVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoveryDriftKubeVersionWithDefaults() *QoveryDriftKubeVersion {
	this := QoveryDriftKubeVersion{}
	return &this
}

// GetKubeVersion returns the KubeVersion field value
func (o *QoveryDriftKubeVersion) GetKubeVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubeVersion
}

// GetKubeVersionOk returns a tuple with the KubeVersion field value
// and a boolean to check if the value has been set.
func (o *QoveryDriftKubeVersion) GetKubeVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubeVersion, true
}

// SetKubeVersion sets field value
func (o *QoveryDriftKubeVersion) SetKubeVersion(v string) {
	o.KubeVersion = v
}

// GetExpectedKubeVersion returns the ExpectedKubeVersion field value
func (o *QoveryDriftKubeVersion) GetExpectedKubeVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpectedKubeVersion
}

// GetExpectedKubeVersionOk returns a tuple with the ExpectedKubeVersion field value
// and a boolean to check if the value has been set.
func (o *QoveryDriftKubeVersion) GetExpectedKubeVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpectedKubeVersion, true
}

// SetExpectedKubeVersion sets field value
func (o *QoveryDriftKubeVersion) SetExpectedKubeVersion(v string) {
	o.ExpectedKubeVersion = v
}

func (o QoveryDriftKubeVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoveryDriftKubeVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kube_version"] = o.KubeVersion
	toSerialize["expected_kube_version"] = o.ExpectedKubeVersion
	return toSerialize, nil
}

func (o *QoveryDriftKubeVersion) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kube_version",
		"expected_kube_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQoveryDriftKubeVersion := _QoveryDriftKubeVersion{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQoveryDriftKubeVersion)

	if err != nil {
		return err
	}

	*o = QoveryDriftKubeVersion(varQoveryDriftKubeVersion)

	return err
}

type NullableQoveryDriftKubeVersion struct {
	value *QoveryDriftKubeVersion
	isSet bool
}

func (v NullableQoveryDriftKubeVersion) Get() *QoveryDriftKubeVersion {
	return v.value
}

func (v *NullableQoveryDriftKubeVersion) Set(val *QoveryDriftKubeVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableQoveryDriftKubeVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableQoveryDriftKubeVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoveryDriftKubeVersion(val *QoveryDriftKubeVersion) *NullableQoveryDriftKubeVersion {
	return &NullableQoveryDriftKubeVersion{value: val, isSet: true}
}

func (v NullableQoveryDriftKubeVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoveryDriftKubeVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


